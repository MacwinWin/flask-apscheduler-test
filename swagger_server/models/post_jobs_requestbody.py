# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.postjobsrequestbody_job import PostjobsrequestbodyJob  # noqa: F401,E501
from swagger_server.models.postschedulerrequestbody_log import PostschedulerrequestbodyLog  # noqa: F401,E501
from swagger_server import util


class PostJobsRequestbody(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, log: PostschedulerrequestbodyLog=None, job: PostjobsrequestbodyJob=None):  # noqa: E501
        """PostJobsRequestbody - a model defined in Swagger

        :param log: The log of this PostJobsRequestbody.  # noqa: E501
        :type log: PostschedulerrequestbodyLog
        :param job: The job of this PostJobsRequestbody.  # noqa: E501
        :type job: PostjobsrequestbodyJob
        """
        self.swagger_types = {
            'log': PostschedulerrequestbodyLog,
            'job': PostjobsrequestbodyJob
        }

        self.attribute_map = {
            'log': 'log',
            'job': 'job'
        }
        self._log = log
        self._job = job

    @classmethod
    def from_dict(cls, dikt) -> 'PostJobsRequestbody':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The post-jobs-requestbody of this PostJobsRequestbody.  # noqa: E501
        :rtype: PostJobsRequestbody
        """
        return util.deserialize_model(dikt, cls)

    @property
    def log(self) -> PostschedulerrequestbodyLog:
        """Gets the log of this PostJobsRequestbody.


        :return: The log of this PostJobsRequestbody.
        :rtype: PostschedulerrequestbodyLog
        """
        return self._log

    @log.setter
    def log(self, log: PostschedulerrequestbodyLog):
        """Sets the log of this PostJobsRequestbody.


        :param log: The log of this PostJobsRequestbody.
        :type log: PostschedulerrequestbodyLog
        """
        if log is None:
            raise ValueError("Invalid value for `log`, must not be `None`")  # noqa: E501

        self._log = log

    @property
    def job(self) -> PostjobsrequestbodyJob:
        """Gets the job of this PostJobsRequestbody.


        :return: The job of this PostJobsRequestbody.
        :rtype: PostjobsrequestbodyJob
        """
        return self._job

    @job.setter
    def job(self, job: PostjobsrequestbodyJob):
        """Sets the job of this PostJobsRequestbody.


        :param job: The job of this PostJobsRequestbody.
        :type job: PostjobsrequestbodyJob
        """
        if job is None:
            raise ValueError("Invalid value for `job`, must not be `None`")  # noqa: E501

        self._job = job
