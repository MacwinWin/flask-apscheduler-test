# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.any_ofpostjobsrequestbody_job_args_items import AnyOfpostjobsrequestbodyJobArgsItems  # noqa: F401,E501
from swagger_server import util


class PostjobsrequestbodyJob(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: str=None, func: str=None, args: List[AnyOfpostjobsrequestbodyJobArgsItems]=None, trigger: str=None):  # noqa: E501
        """PostjobsrequestbodyJob - a model defined in Swagger

        :param id: The id of this PostjobsrequestbodyJob.  # noqa: E501
        :type id: str
        :param func: The func of this PostjobsrequestbodyJob.  # noqa: E501
        :type func: str
        :param args: The args of this PostjobsrequestbodyJob.  # noqa: E501
        :type args: List[AnyOfpostjobsrequestbodyJobArgsItems]
        :param trigger: The trigger of this PostjobsrequestbodyJob.  # noqa: E501
        :type trigger: str
        """
        self.swagger_types = {
            'id': str,
            'func': str,
            'args': List[AnyOfpostjobsrequestbodyJobArgsItems],
            'trigger': str
        }

        self.attribute_map = {
            'id': 'id',
            'func': 'func',
            'args': 'args',
            'trigger': 'trigger'
        }
        self._id = id
        self._func = func
        self._args = args
        self._trigger = trigger

    @classmethod
    def from_dict(cls, dikt) -> 'PostjobsrequestbodyJob':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The postjobsrequestbody_job of this PostjobsrequestbodyJob.  # noqa: E501
        :rtype: PostjobsrequestbodyJob
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this PostjobsrequestbodyJob.

        作业ID  # noqa: E501

        :return: The id of this PostjobsrequestbodyJob.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this PostjobsrequestbodyJob.

        作业ID  # noqa: E501

        :param id: The id of this PostjobsrequestbodyJob.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def func(self) -> str:
        """Gets the func of this PostjobsrequestbodyJob.

        作业函数  # noqa: E501

        :return: The func of this PostjobsrequestbodyJob.
        :rtype: str
        """
        return self._func

    @func.setter
    def func(self, func: str):
        """Sets the func of this PostjobsrequestbodyJob.

        作业函数  # noqa: E501

        :param func: The func of this PostjobsrequestbodyJob.
        :type func: str
        """
        if func is None:
            raise ValueError("Invalid value for `func`, must not be `None`")  # noqa: E501

        self._func = func

    @property
    def args(self) -> List[AnyOfpostjobsrequestbodyJobArgsItems]:
        """Gets the args of this PostjobsrequestbodyJob.

        参数列表  # noqa: E501

        :return: The args of this PostjobsrequestbodyJob.
        :rtype: List[AnyOfpostjobsrequestbodyJobArgsItems]
        """
        return self._args

    @args.setter
    def args(self, args: List[AnyOfpostjobsrequestbodyJobArgsItems]):
        """Sets the args of this PostjobsrequestbodyJob.

        参数列表  # noqa: E501

        :param args: The args of this PostjobsrequestbodyJob.
        :type args: List[AnyOfpostjobsrequestbodyJobArgsItems]
        """
        if args is None:
            raise ValueError("Invalid value for `args`, must not be `None`")  # noqa: E501

        self._args = args

    @property
    def trigger(self) -> str:
        """Gets the trigger of this PostjobsrequestbodyJob.

        触发方式  # noqa: E501

        :return: The trigger of this PostjobsrequestbodyJob.
        :rtype: str
        """
        return self._trigger

    @trigger.setter
    def trigger(self, trigger: str):
        """Sets the trigger of this PostjobsrequestbodyJob.

        触发方式  # noqa: E501

        :param trigger: The trigger of this PostjobsrequestbodyJob.
        :type trigger: str
        """
        if trigger is None:
            raise ValueError("Invalid value for `trigger`, must not be `None`")  # noqa: E501

        self._trigger = trigger
